<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" tests="43" skipped="0" failures="0" errors="0" timestamp="2023-03-07T00:08:17" hostname="Desk-James" time="0.064">
  <properties/>
  <testcase name="sanity check" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.007"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.004"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[4]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[5]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[6]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should relay BluetoothGattCallback callbacks to appropriate Observables[7]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should emit error when DisconnectionRouter.asGenericObservable() emits error" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should call DisconnectionRouter.onDisconnectedException() when .onConnectionStateChange() callback will receive STATE_DISCONNECTED/STATE_DISCONNECTING regardless of status[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="should call DisconnectionRouter.onDisconnectedException() when .onConnectionStateChange() callback will receive STATE_DISCONNECTED/STATE_DISCONNECTING regardless of status[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should call DisconnectionRouter.onDisconnectedException() when .onConnectionStateChange() callback will receive STATE_DISCONNECTED/STATE_DISCONNECTING regardless of status[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should call DisconnectionRouter.onDisconnectedException() when .onConnectionStateChange() callback will receive STATE_DISCONNECTED/STATE_DISCONNECTING regardless of status[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should call DisconnectionRouter.onGattConnectionStateException() when .onConnectionStateChange() callback will receive STATE_CONNECTED/STATE_CONNECTING with status != GATT_SUCCESS [0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="should call DisconnectionRouter.onGattConnectionStateException() when .onConnectionStateChange() callback will receive STATE_CONNECTED/STATE_CONNECTING with status != GATT_SUCCESS [1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[4]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="observeDisconnect() should not call DisconnectionRouter.route() if any of BluetoothGatt.on*() [other than onConnectionStateChanged()] callbacks will receive status != GATT_SUCCESS[5]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="getOnConnectionStateChange() should not throw if onConnectionStateChange() received STATE_DISCONNECTED[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="getOnConnectionStateChange() should not throw if onConnectionStateChange() received STATE_DISCONNECTED[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[4]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[5]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks other than getOnConnectionStateChange() should throw if DisconnectionRouter.asObservable() emits an exception[6]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.003"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.002"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[4]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="callbacks should emit error if their respective BluetoothGatt.on*() callbacks received status != GATT_SUCCESS[5]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[0]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[1]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[2]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[3]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[4]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.0"/>
  <testcase name="should transmit error on proper callback when status != BluetoothGatt.GATT_SUCCESS, subsequent calls to callbacks will work normally[5]" classname="com.polidea.rxandroidble.internal.connection.RxBleGattCallbackTest" time="0.001"/>
  <system-out><![CDATA[WARNING: No manifest file found at .\AndroidManifest.xml.Falling back to the Android OS resources only.
To remove this warning, annotate your test class with @Config(manifest=Config.NONE).
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
