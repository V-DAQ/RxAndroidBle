<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" tests="18" skipped="0" failures="0" errors="0" timestamp="2023-03-07T00:08:12" hostname="Desk-James" time="0.016">
  <properties/>
  <testcase name="should complete if AtomicReference&lt;BluetoothGatt&gt; contains null and then release the queue" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.008"/>
  <testcase name="should call BluetoothGatt.close() if BluetoothGatt is disconnected at the time of running and then release the queue" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.002"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[0]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.003"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[1]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[2]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.001"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[3]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[4]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[5]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[6]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[7]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[8]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[9]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[10]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call BluetoothGatt.disconnect() if BluetoothGatt is not disconnected at the time of running and then BluetoothGatt.close() when RxBleGattCallback.getOnConnectionStateChange() will emit RxBleConnection.RxBleConnectionState.DISCONNECTED and then release the queue[11]" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call connectionStateChangedAction with DISCONNECTING when run" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.001"/>
  <testcase name="should call connectionStateChangedAction with DISCONNECTED when completed" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call connectionStateChangedAction with DISCONNECTED when error occurred" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <testcase name="should call connectionStateChangedAction with DISCONNECTED when BluetoothGatt is null" classname="com.polidea.rxandroidble.internal.operations.OperationDisconnectTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
