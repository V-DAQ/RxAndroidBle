<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" tests="128" skipped="0" failures="0" errors="0" timestamp="2023-03-07T00:08:12" hostname="Desk-James" time="0.146">
  <properties/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_FIND_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason if CLIENT_CONFIGURATION_DESCRIPTION wasn't found when in DEFAULT mode[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.033"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_FIND_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason if CLIENT_CONFIGURATION_DESCRIPTION wasn't found when in DEFAULT mode[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should setup notification even if CLIENT_CONFIGURATION_DESCRIPTION wasn't found when in COMPAT mode[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should setup notification even if CLIENT_CONFIGURATION_DESCRIPTION wasn't found when in COMPAT mode[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit Observable&lt;byte[]&gt; before DescriptorWriter.writeDescriptor() emits when in QUICK_SETUP mode[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.014"/>
  <testcase name="should emit Observable&lt;byte[]&gt; before DescriptorWriter.writeDescriptor() emits when in QUICK_SETUP mode[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_SET_LOCAL_NOTIFICATION reason if failed to set characteristic notification[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason and a cause if failed to write successfully CCC Descriptor when in DEFAULT mode[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.005"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason and a cause if failed to write successfully CCC Descriptor when in DEFAULT mode[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason and a cause if failed to write successfully CCC Descriptor (from the emitted Observable&lt;byte&gt;) when in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should emit BleCannotSetCharacteristicNotificationException with CANNOT_WRITE_CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR reason and a cause if failed to write successfully CCC Descriptor (from the emitted Observable&lt;byte&gt;) when in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should complete the emitted io.reactivex.Observable&lt;byte&gt; when an error happens while writing CCC in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should complete the emitted io.reactivex.Observable&lt;byte&gt; when an error happens while writing CCC in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should subscribe to DescriptorWriter.writeDescriptor() only after subscription to the emitted io.reactivex.Observable&lt;byte[]&gt; is made in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should subscribe to DescriptorWriter.writeDescriptor() only after subscription to the emitted io.reactivex.Observable&lt;byte[]&gt; is made in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not subscribe to DescriptorWriter.writeDescriptor() after subscription to the parent io.reactivex.Observable&lt;Observable&lt;byte[]&gt;&gt; was unsubscribed in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should not subscribe to DescriptorWriter.writeDescriptor() after subscription to the parent io.reactivex.Observable&lt;Observable&lt;byte[]&gt;&gt; was unsubscribed in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not subscribe to DescriptorWriter.writeDescriptor() twice in QUICK_SETUP mode when more than one subscription is made to the child io.reactivex.Observable&lt;byte[]&gt; ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.003"/>
  <testcase name="should not subscribe to DescriptorWriter.writeDescriptor() twice in QUICK_SETUP mode when more than one subscription is made to the child io.reactivex.Observable&lt;byte[]&gt; ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not subscribe again to DescriptorWriter.writeDescriptor() if first subscription finished with 'complete' in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.008"/>
  <testcase name="should not subscribe again to DescriptorWriter.writeDescriptor() if first subscription finished with 'complete' in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not subscribe again to DescriptorWriter.writeDescriptor() if first subscription finished with 'error' in QUICK_SETUP mode ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not subscribe again to DescriptorWriter.writeDescriptor() if first subscription finished with 'error' in QUICK_SETUP mode ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened before .subscribe()[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy RxBleGattCallback.observeDisconnect() if happened after Observable&lt;byte[]&gt; emission[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should write proper value to CCC Descriptor when in non COMPAT mode mode:DEFAULT ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should write proper value to CCC Descriptor when in non COMPAT mode mode:QUICK_SETUP ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should write proper value to CCC Descriptor when in non COMPAT mode mode:DEFAULT ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should write proper value to CCC Descriptor when in non COMPAT mode mode:QUICK_SETUP ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.01"/>
  <testcase name="should notify about value change and stay subscribed[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify about value change and stay subscribed[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify about value change and stay subscribed[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify about value change and stay subscribed[6]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[7]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify about value change and stay subscribed[8]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[9]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[10]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify about value change and stay subscribed[11]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[6]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[7]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[8]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[9]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[10]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[11]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[12]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[13]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[14]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[15]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[16]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not notify about value change if UUID and / or instanceId is not matching[17]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should not setup another notification if one was already done on the same characteristic even if not subscribed yet[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify both subscribers about value change[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should notify both subscribers about value change[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify both subscribers about value change[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify both subscribers about value change[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should notify both subscribers about value change[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should notify both subscribers about value change[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:DEFAULT ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.003"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:DEFAULT ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:COMPAT ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:COMPAT ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:QUICK_SETUP ack:true" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should unregister notifications after all observers are unsubscribed mode:QUICK_SETUP ack:false" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[6]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[7]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[8]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[9]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[10]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[11]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[12]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[13]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[14]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[15]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[16]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should emit BleCharacteristicNotificationOfOtherTypeAlreadySetException if notification is set up after indication on the same characteristic[17]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.002"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should complete the emitted Observable&lt;byte&gt; when unsubscribed[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[0]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[1]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[2]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[3]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[4]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.001"/>
  <testcase name="should proxy the error emitted by RxBleGattCallback.getOnCharacteristicChanged() to emitted Observable&lt;byte&gt;[5]" classname="com.polidea.rxandroidble.internal.connection.NotificationAndIndicationManagerTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
