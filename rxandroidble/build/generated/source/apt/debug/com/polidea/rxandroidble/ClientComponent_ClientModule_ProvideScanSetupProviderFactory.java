// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble;

import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.scan.ScanSetupBuilder;
import com.polidea.rxandroidble.internal.scan.ScanSetupBuilderImplApi18;
import com.polidea.rxandroidble.internal.scan.ScanSetupBuilderImplApi21;
import com.polidea.rxandroidble.internal.scan.ScanSetupBuilderImplApi23;

public final class ClientComponent_ClientModule_ProvideScanSetupProviderFactory
    implements Factory<ScanSetupBuilder> {
  private final Provider<Integer> deviceSdkProvider;

  private final Provider<ScanSetupBuilderImplApi18> scanSetupBuilderProviderForApi18Provider;

  private final Provider<ScanSetupBuilderImplApi21> scanSetupBuilderProviderForApi21Provider;

  private final Provider<ScanSetupBuilderImplApi23> scanSetupBuilderProviderForApi23Provider;

  public ClientComponent_ClientModule_ProvideScanSetupProviderFactory(
      Provider<Integer> deviceSdkProvider,
      Provider<ScanSetupBuilderImplApi18> scanSetupBuilderProviderForApi18Provider,
      Provider<ScanSetupBuilderImplApi21> scanSetupBuilderProviderForApi21Provider,
      Provider<ScanSetupBuilderImplApi23> scanSetupBuilderProviderForApi23Provider) {
    this.deviceSdkProvider = deviceSdkProvider;
    this.scanSetupBuilderProviderForApi18Provider = scanSetupBuilderProviderForApi18Provider;
    this.scanSetupBuilderProviderForApi21Provider = scanSetupBuilderProviderForApi21Provider;
    this.scanSetupBuilderProviderForApi23Provider = scanSetupBuilderProviderForApi23Provider;
  }

  @Override
  public ScanSetupBuilder get() {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideScanSetupProvider(
            deviceSdkProvider.get(),
            scanSetupBuilderProviderForApi18Provider,
            scanSetupBuilderProviderForApi21Provider,
            scanSetupBuilderProviderForApi23Provider),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientComponent_ClientModule_ProvideScanSetupProviderFactory create(
      Provider<Integer> deviceSdkProvider,
      Provider<ScanSetupBuilderImplApi18> scanSetupBuilderProviderForApi18Provider,
      Provider<ScanSetupBuilderImplApi21> scanSetupBuilderProviderForApi21Provider,
      Provider<ScanSetupBuilderImplApi23> scanSetupBuilderProviderForApi23Provider) {
    return new ClientComponent_ClientModule_ProvideScanSetupProviderFactory(
        deviceSdkProvider,
        scanSetupBuilderProviderForApi18Provider,
        scanSetupBuilderProviderForApi21Provider,
        scanSetupBuilderProviderForApi23Provider);
  }

  public static ScanSetupBuilder proxyProvideScanSetupProvider(
      int deviceSdk,
      Provider<ScanSetupBuilderImplApi18> scanSetupBuilderProviderForApi18,
      Provider<ScanSetupBuilderImplApi21> scanSetupBuilderProviderForApi21,
      Provider<ScanSetupBuilderImplApi23> scanSetupBuilderProviderForApi23) {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideScanSetupProvider(
            deviceSdk,
            scanSetupBuilderProviderForApi18,
            scanSetupBuilderProviderForApi21,
            scanSetupBuilderProviderForApi23),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
