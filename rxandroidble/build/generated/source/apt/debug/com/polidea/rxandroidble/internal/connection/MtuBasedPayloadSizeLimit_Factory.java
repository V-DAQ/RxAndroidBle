// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.connection;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.RxBleConnection;

public final class MtuBasedPayloadSizeLimit_Factory implements Factory<MtuBasedPayloadSizeLimit> {
  private final Provider<RxBleConnection> rxBleConnectionProvider;

  private final Provider<Integer> gattWriteMtuOverheadProvider;

  public MtuBasedPayloadSizeLimit_Factory(
      Provider<RxBleConnection> rxBleConnectionProvider,
      Provider<Integer> gattWriteMtuOverheadProvider) {
    this.rxBleConnectionProvider = rxBleConnectionProvider;
    this.gattWriteMtuOverheadProvider = gattWriteMtuOverheadProvider;
  }

  @Override
  public MtuBasedPayloadSizeLimit get() {
    return new MtuBasedPayloadSizeLimit(
        rxBleConnectionProvider.get(), gattWriteMtuOverheadProvider.get());
  }

  public static MtuBasedPayloadSizeLimit_Factory create(
      Provider<RxBleConnection> rxBleConnectionProvider,
      Provider<Integer> gattWriteMtuOverheadProvider) {
    return new MtuBasedPayloadSizeLimit_Factory(
        rxBleConnectionProvider, gattWriteMtuOverheadProvider);
  }

  public static MtuBasedPayloadSizeLimit newMtuBasedPayloadSizeLimit(
      RxBleConnection rxBleConnection, int gattWriteMtuOverhead) {
    return new MtuBasedPayloadSizeLimit(rxBleConnection, gattWriteMtuOverhead);
  }
}
