// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.util;

import android.content.Context;
import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;

public final class LocationServicesOkObservableApi23_Factory
    implements Factory<LocationServicesOkObservableApi23> {
  private final Provider<Context> contextProvider;

  private final Provider<LocationServicesStatus> locationServicesStatusProvider;

  public LocationServicesOkObservableApi23_Factory(
      Provider<Context> contextProvider,
      Provider<LocationServicesStatus> locationServicesStatusProvider) {
    this.contextProvider = contextProvider;
    this.locationServicesStatusProvider = locationServicesStatusProvider;
  }

  @Override
  public LocationServicesOkObservableApi23 get() {
    return new LocationServicesOkObservableApi23(
        contextProvider.get(), locationServicesStatusProvider.get());
  }

  public static LocationServicesOkObservableApi23_Factory create(
      Provider<Context> contextProvider,
      Provider<LocationServicesStatus> locationServicesStatusProvider) {
    return new LocationServicesOkObservableApi23_Factory(
        contextProvider, locationServicesStatusProvider);
  }

  public static LocationServicesOkObservableApi23 newLocationServicesOkObservableApi23(
      Context context, LocationServicesStatus locationServicesStatus) {
    return new LocationServicesOkObservableApi23(context, locationServicesStatus);
  }
}
