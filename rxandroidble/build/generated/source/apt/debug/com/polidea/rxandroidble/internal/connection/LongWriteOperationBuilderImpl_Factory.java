// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.connection;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.RxBleConnection;
import com.polidea.rxandroidble.internal.operations.OperationsProvider;
import com.polidea.rxandroidble.internal.serialization.ConnectionOperationQueue;

public final class LongWriteOperationBuilderImpl_Factory
    implements Factory<LongWriteOperationBuilderImpl> {
  private final Provider<ConnectionOperationQueue> operationQueueProvider;

  private final Provider<MtuBasedPayloadSizeLimit> defaultMaxBatchSizeProvider;

  private final Provider<RxBleConnection> rxBleConnectionProvider;

  private final Provider<OperationsProvider> operationsProvider;

  public LongWriteOperationBuilderImpl_Factory(
      Provider<ConnectionOperationQueue> operationQueueProvider,
      Provider<MtuBasedPayloadSizeLimit> defaultMaxBatchSizeProvider,
      Provider<RxBleConnection> rxBleConnectionProvider,
      Provider<OperationsProvider> operationsProvider) {
    this.operationQueueProvider = operationQueueProvider;
    this.defaultMaxBatchSizeProvider = defaultMaxBatchSizeProvider;
    this.rxBleConnectionProvider = rxBleConnectionProvider;
    this.operationsProvider = operationsProvider;
  }

  @Override
  public LongWriteOperationBuilderImpl get() {
    return new LongWriteOperationBuilderImpl(
        operationQueueProvider.get(),
        defaultMaxBatchSizeProvider.get(),
        rxBleConnectionProvider.get(),
        operationsProvider.get());
  }

  public static LongWriteOperationBuilderImpl_Factory create(
      Provider<ConnectionOperationQueue> operationQueueProvider,
      Provider<MtuBasedPayloadSizeLimit> defaultMaxBatchSizeProvider,
      Provider<RxBleConnection> rxBleConnectionProvider,
      Provider<OperationsProvider> operationsProvider) {
    return new LongWriteOperationBuilderImpl_Factory(
        operationQueueProvider,
        defaultMaxBatchSizeProvider,
        rxBleConnectionProvider,
        operationsProvider);
  }

  public static LongWriteOperationBuilderImpl newLongWriteOperationBuilderImpl(
      ConnectionOperationQueue operationQueue,
      Object defaultMaxBatchSizeProvider,
      RxBleConnection rxBleConnection,
      OperationsProvider operationsProvider) {
    return new LongWriteOperationBuilderImpl(
        operationQueue,
        (MtuBasedPayloadSizeLimit) defaultMaxBatchSizeProvider,
        rxBleConnection,
        operationsProvider);
  }
}
