// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.connection;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.operations.DisconnectOperation;
import com.polidea.rxandroidble.internal.serialization.ClientOperationQueue;

public final class DisconnectAction_Factory implements Factory<DisconnectAction> {
  private final Provider<ClientOperationQueue> clientOperationQueueProvider;

  private final Provider<DisconnectOperation> operationDisconnectProvider;

  public DisconnectAction_Factory(
      Provider<ClientOperationQueue> clientOperationQueueProvider,
      Provider<DisconnectOperation> operationDisconnectProvider) {
    this.clientOperationQueueProvider = clientOperationQueueProvider;
    this.operationDisconnectProvider = operationDisconnectProvider;
  }

  @Override
  public DisconnectAction get() {
    return new DisconnectAction(
        clientOperationQueueProvider.get(), operationDisconnectProvider.get());
  }

  public static DisconnectAction_Factory create(
      Provider<ClientOperationQueue> clientOperationQueueProvider,
      Provider<DisconnectOperation> operationDisconnectProvider) {
    return new DisconnectAction_Factory(clientOperationQueueProvider, operationDisconnectProvider);
  }

  public static DisconnectAction newDisconnectAction(
      ClientOperationQueue clientOperationQueue, DisconnectOperation operationDisconnect) {
    return new DisconnectAction(clientOperationQueue, operationDisconnect);
  }
}
