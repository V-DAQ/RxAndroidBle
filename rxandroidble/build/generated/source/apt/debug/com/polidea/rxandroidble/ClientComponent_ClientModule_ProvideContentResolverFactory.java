// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble;

import android.content.ContentResolver;
import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;

public final class ClientComponent_ClientModule_ProvideContentResolverFactory
    implements Factory<ContentResolver> {
  private final ClientComponent.ClientModule module;

  public ClientComponent_ClientModule_ProvideContentResolverFactory(
      ClientComponent.ClientModule module) {
    this.module = module;
  }

  @Override
  public ContentResolver get() {
    return Preconditions.checkNotNull(
        module.provideContentResolver(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientComponent_ClientModule_ProvideContentResolverFactory create(
      ClientComponent.ClientModule module) {
    return new ClientComponent_ClientModule_ProvideContentResolverFactory(module);
  }

  public static ContentResolver proxyProvideContentResolver(ClientComponent.ClientModule instance) {
    return Preconditions.checkNotNull(
        instance.provideContentResolver(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
