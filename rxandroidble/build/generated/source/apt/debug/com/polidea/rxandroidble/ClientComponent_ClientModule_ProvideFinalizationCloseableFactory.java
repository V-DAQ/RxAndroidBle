// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble;

import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import java.util.concurrent.ExecutorService;

public final class ClientComponent_ClientModule_ProvideFinalizationCloseableFactory
    implements Factory<ClientComponent.ClientComponentFinalizer> {
  private final Provider<ExecutorService> interactionExecutorServiceProvider;

  private final Provider<ExecutorService> callbacksExecutorServiceProvider;

  private final Provider<ExecutorService> connectionQueueExecutorServiceProvider;

  public ClientComponent_ClientModule_ProvideFinalizationCloseableFactory(
      Provider<ExecutorService> interactionExecutorServiceProvider,
      Provider<ExecutorService> callbacksExecutorServiceProvider,
      Provider<ExecutorService> connectionQueueExecutorServiceProvider) {
    this.interactionExecutorServiceProvider = interactionExecutorServiceProvider;
    this.callbacksExecutorServiceProvider = callbacksExecutorServiceProvider;
    this.connectionQueueExecutorServiceProvider = connectionQueueExecutorServiceProvider;
  }

  @Override
  public ClientComponent.ClientComponentFinalizer get() {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideFinalizationCloseable(
            interactionExecutorServiceProvider.get(),
            callbacksExecutorServiceProvider.get(),
            connectionQueueExecutorServiceProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientComponent_ClientModule_ProvideFinalizationCloseableFactory create(
      Provider<ExecutorService> interactionExecutorServiceProvider,
      Provider<ExecutorService> callbacksExecutorServiceProvider,
      Provider<ExecutorService> connectionQueueExecutorServiceProvider) {
    return new ClientComponent_ClientModule_ProvideFinalizationCloseableFactory(
        interactionExecutorServiceProvider,
        callbacksExecutorServiceProvider,
        connectionQueueExecutorServiceProvider);
  }

  public static ClientComponent.ClientComponentFinalizer proxyProvideFinalizationCloseable(
      ExecutorService interactionExecutorService,
      ExecutorService callbacksExecutorService,
      ExecutorService connectionQueueExecutorService) {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideFinalizationCloseable(
            interactionExecutorService, callbacksExecutorService, connectionQueueExecutorService),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
