// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.util;

import android.content.ContentResolver;
import android.location.LocationManager;
import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;

public final class CheckerLocationProvider_Factory implements Factory<CheckerLocationProvider> {
  private final Provider<ContentResolver> contentResolverProvider;

  private final Provider<LocationManager> locationManagerProvider;

  public CheckerLocationProvider_Factory(
      Provider<ContentResolver> contentResolverProvider,
      Provider<LocationManager> locationManagerProvider) {
    this.contentResolverProvider = contentResolverProvider;
    this.locationManagerProvider = locationManagerProvider;
  }

  @Override
  public CheckerLocationProvider get() {
    return new CheckerLocationProvider(
        contentResolverProvider.get(), locationManagerProvider.get());
  }

  public static CheckerLocationProvider_Factory create(
      Provider<ContentResolver> contentResolverProvider,
      Provider<LocationManager> locationManagerProvider) {
    return new CheckerLocationProvider_Factory(contentResolverProvider, locationManagerProvider);
  }

  public static CheckerLocationProvider newCheckerLocationProvider(
      ContentResolver contentResolver, LocationManager locationManager) {
    return new CheckerLocationProvider(contentResolver, locationManager);
  }
}
