// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.operations;

import android.bluetooth.BluetoothDevice;
import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.connection.BluetoothGattProvider;
import com.polidea.rxandroidble.internal.connection.ConnectionStateChangeListener;
import com.polidea.rxandroidble.internal.connection.RxBleGattCallback;
import com.polidea.rxandroidble.internal.util.BleConnectionCompat;

public final class ConnectOperation_Factory implements Factory<ConnectOperation> {
  private final Provider<BluetoothDevice> bluetoothDeviceProvider;

  private final Provider<BleConnectionCompat> connectionCompatProvider;

  private final Provider<RxBleGattCallback> rxBleGattCallbackProvider;

  private final Provider<BluetoothGattProvider> bluetoothGattProvider;

  private final Provider<TimeoutConfiguration> connectTimeoutProvider;

  private final Provider<Boolean> autoConnectProvider;

  private final Provider<ConnectionStateChangeListener> connectionStateChangedActionProvider;

  public ConnectOperation_Factory(
      Provider<BluetoothDevice> bluetoothDeviceProvider,
      Provider<BleConnectionCompat> connectionCompatProvider,
      Provider<RxBleGattCallback> rxBleGattCallbackProvider,
      Provider<BluetoothGattProvider> bluetoothGattProvider,
      Provider<TimeoutConfiguration> connectTimeoutProvider,
      Provider<Boolean> autoConnectProvider,
      Provider<ConnectionStateChangeListener> connectionStateChangedActionProvider) {
    this.bluetoothDeviceProvider = bluetoothDeviceProvider;
    this.connectionCompatProvider = connectionCompatProvider;
    this.rxBleGattCallbackProvider = rxBleGattCallbackProvider;
    this.bluetoothGattProvider = bluetoothGattProvider;
    this.connectTimeoutProvider = connectTimeoutProvider;
    this.autoConnectProvider = autoConnectProvider;
    this.connectionStateChangedActionProvider = connectionStateChangedActionProvider;
  }

  @Override
  public ConnectOperation get() {
    return new ConnectOperation(
        bluetoothDeviceProvider.get(),
        connectionCompatProvider.get(),
        rxBleGattCallbackProvider.get(),
        bluetoothGattProvider.get(),
        connectTimeoutProvider.get(),
        autoConnectProvider.get(),
        connectionStateChangedActionProvider.get());
  }

  public static ConnectOperation_Factory create(
      Provider<BluetoothDevice> bluetoothDeviceProvider,
      Provider<BleConnectionCompat> connectionCompatProvider,
      Provider<RxBleGattCallback> rxBleGattCallbackProvider,
      Provider<BluetoothGattProvider> bluetoothGattProvider,
      Provider<TimeoutConfiguration> connectTimeoutProvider,
      Provider<Boolean> autoConnectProvider,
      Provider<ConnectionStateChangeListener> connectionStateChangedActionProvider) {
    return new ConnectOperation_Factory(
        bluetoothDeviceProvider,
        connectionCompatProvider,
        rxBleGattCallbackProvider,
        bluetoothGattProvider,
        connectTimeoutProvider,
        autoConnectProvider,
        connectionStateChangedActionProvider);
  }

  public static ConnectOperation newConnectOperation(
      BluetoothDevice bluetoothDevice,
      BleConnectionCompat connectionCompat,
      RxBleGattCallback rxBleGattCallback,
      BluetoothGattProvider bluetoothGattProvider,
      TimeoutConfiguration connectTimeout,
      boolean autoConnect,
      ConnectionStateChangeListener connectionStateChangedAction) {
    return new ConnectOperation(
        bluetoothDevice,
        connectionCompat,
        rxBleGattCallback,
        bluetoothGattProvider,
        connectTimeout,
        autoConnect,
        connectionStateChangedAction);
  }
}
