// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.connection;

import android.bluetooth.BluetoothGatt;
import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.operations.OperationsProvider;
import com.polidea.rxandroidble.internal.serialization.ConnectionOperationQueue;

public final class ServiceDiscoveryManager_Factory implements Factory<ServiceDiscoveryManager> {
  private final Provider<ConnectionOperationQueue> operationQueueProvider;

  private final Provider<BluetoothGatt> bluetoothGattProvider;

  private final Provider<OperationsProvider> operationProvider;

  public ServiceDiscoveryManager_Factory(
      Provider<ConnectionOperationQueue> operationQueueProvider,
      Provider<BluetoothGatt> bluetoothGattProvider,
      Provider<OperationsProvider> operationProvider) {
    this.operationQueueProvider = operationQueueProvider;
    this.bluetoothGattProvider = bluetoothGattProvider;
    this.operationProvider = operationProvider;
  }

  @Override
  public ServiceDiscoveryManager get() {
    return new ServiceDiscoveryManager(
        operationQueueProvider.get(), bluetoothGattProvider.get(), operationProvider.get());
  }

  public static ServiceDiscoveryManager_Factory create(
      Provider<ConnectionOperationQueue> operationQueueProvider,
      Provider<BluetoothGatt> bluetoothGattProvider,
      Provider<OperationsProvider> operationProvider) {
    return new ServiceDiscoveryManager_Factory(
        operationQueueProvider, bluetoothGattProvider, operationProvider);
  }

  public static ServiceDiscoveryManager newServiceDiscoveryManager(
      ConnectionOperationQueue operationQueue,
      BluetoothGatt bluetoothGatt,
      OperationsProvider operationProvider) {
    return new ServiceDiscoveryManager(operationQueue, bluetoothGatt, operationProvider);
  }
}
