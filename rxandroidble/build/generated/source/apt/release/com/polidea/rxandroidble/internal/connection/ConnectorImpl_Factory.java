// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.connection;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.serialization.ClientOperationQueue;
import rx.Scheduler;

public final class ConnectorImpl_Factory implements Factory<ConnectorImpl> {
  private final Provider<ClientOperationQueue> clientOperationQueueProvider;

  private final Provider<ConnectionComponent.Builder> connectionComponentBuilderProvider;

  private final Provider<Scheduler> callbacksSchedulerProvider;

  public ConnectorImpl_Factory(
      Provider<ClientOperationQueue> clientOperationQueueProvider,
      Provider<ConnectionComponent.Builder> connectionComponentBuilderProvider,
      Provider<Scheduler> callbacksSchedulerProvider) {
    this.clientOperationQueueProvider = clientOperationQueueProvider;
    this.connectionComponentBuilderProvider = connectionComponentBuilderProvider;
    this.callbacksSchedulerProvider = callbacksSchedulerProvider;
  }

  @Override
  public ConnectorImpl get() {
    return new ConnectorImpl(
        clientOperationQueueProvider.get(),
        connectionComponentBuilderProvider.get(),
        callbacksSchedulerProvider.get());
  }

  public static ConnectorImpl_Factory create(
      Provider<ClientOperationQueue> clientOperationQueueProvider,
      Provider<ConnectionComponent.Builder> connectionComponentBuilderProvider,
      Provider<Scheduler> callbacksSchedulerProvider) {
    return new ConnectorImpl_Factory(
        clientOperationQueueProvider,
        connectionComponentBuilderProvider,
        callbacksSchedulerProvider);
  }
}
