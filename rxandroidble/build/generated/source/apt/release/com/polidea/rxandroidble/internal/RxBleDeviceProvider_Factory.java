// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.cache.DeviceComponentCache;

public final class RxBleDeviceProvider_Factory implements Factory<RxBleDeviceProvider> {
  private final Provider<DeviceComponentCache> deviceComponentCacheProvider;

  private final Provider<DeviceComponent.Builder> deviceComponentBuilderProvider;

  public RxBleDeviceProvider_Factory(
      Provider<DeviceComponentCache> deviceComponentCacheProvider,
      Provider<DeviceComponent.Builder> deviceComponentBuilderProvider) {
    this.deviceComponentCacheProvider = deviceComponentCacheProvider;
    this.deviceComponentBuilderProvider = deviceComponentBuilderProvider;
  }

  @Override
  public RxBleDeviceProvider get() {
    return new RxBleDeviceProvider(
        deviceComponentCacheProvider.get(), deviceComponentBuilderProvider);
  }

  public static RxBleDeviceProvider_Factory create(
      Provider<DeviceComponentCache> deviceComponentCacheProvider,
      Provider<DeviceComponent.Builder> deviceComponentBuilderProvider) {
    return new RxBleDeviceProvider_Factory(
        deviceComponentCacheProvider, deviceComponentBuilderProvider);
  }
}
