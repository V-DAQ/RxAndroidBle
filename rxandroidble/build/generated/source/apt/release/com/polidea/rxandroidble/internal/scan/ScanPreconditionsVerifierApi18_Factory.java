// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal.scan;

import bleshadow.dagger.internal.Factory;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.util.LocationServicesStatus;
import com.polidea.rxandroidble.internal.util.RxBleAdapterWrapper;

public final class ScanPreconditionsVerifierApi18_Factory
    implements Factory<ScanPreconditionsVerifierApi18> {
  private final Provider<RxBleAdapterWrapper> rxBleAdapterWrapperProvider;

  private final Provider<LocationServicesStatus> locationServicesStatusProvider;

  public ScanPreconditionsVerifierApi18_Factory(
      Provider<RxBleAdapterWrapper> rxBleAdapterWrapperProvider,
      Provider<LocationServicesStatus> locationServicesStatusProvider) {
    this.rxBleAdapterWrapperProvider = rxBleAdapterWrapperProvider;
    this.locationServicesStatusProvider = locationServicesStatusProvider;
  }

  @Override
  public ScanPreconditionsVerifierApi18 get() {
    return new ScanPreconditionsVerifierApi18(
        rxBleAdapterWrapperProvider.get(), locationServicesStatusProvider.get());
  }

  public static ScanPreconditionsVerifierApi18_Factory create(
      Provider<RxBleAdapterWrapper> rxBleAdapterWrapperProvider,
      Provider<LocationServicesStatus> locationServicesStatusProvider) {
    return new ScanPreconditionsVerifierApi18_Factory(
        rxBleAdapterWrapperProvider, locationServicesStatusProvider);
  }
}
