// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble;

import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.scan.ScanPreconditionsVerifier;
import com.polidea.rxandroidble.internal.scan.ScanPreconditionsVerifierApi18;
import com.polidea.rxandroidble.internal.scan.ScanPreconditionsVerifierApi24;

public final class ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory
    implements Factory<ScanPreconditionsVerifier> {
  private final Provider<Integer> deviceSdkProvider;

  private final Provider<ScanPreconditionsVerifierApi18> scanPreconditionVerifierForApi18Provider;

  private final Provider<ScanPreconditionsVerifierApi24> scanPreconditionVerifierForApi24Provider;

  public ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory(
      Provider<Integer> deviceSdkProvider,
      Provider<ScanPreconditionsVerifierApi18> scanPreconditionVerifierForApi18Provider,
      Provider<ScanPreconditionsVerifierApi24> scanPreconditionVerifierForApi24Provider) {
    this.deviceSdkProvider = deviceSdkProvider;
    this.scanPreconditionVerifierForApi18Provider = scanPreconditionVerifierForApi18Provider;
    this.scanPreconditionVerifierForApi24Provider = scanPreconditionVerifierForApi24Provider;
  }

  @Override
  public ScanPreconditionsVerifier get() {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideScanPreconditionVerifier(
            deviceSdkProvider.get(),
            scanPreconditionVerifierForApi18Provider,
            scanPreconditionVerifierForApi24Provider),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory create(
      Provider<Integer> deviceSdkProvider,
      Provider<ScanPreconditionsVerifierApi18> scanPreconditionVerifierForApi18Provider,
      Provider<ScanPreconditionsVerifierApi24> scanPreconditionVerifierForApi24Provider) {
    return new ClientComponent_ClientModule_ProvideScanPreconditionVerifierFactory(
        deviceSdkProvider,
        scanPreconditionVerifierForApi18Provider,
        scanPreconditionVerifierForApi24Provider);
  }

  public static ScanPreconditionsVerifier proxyProvideScanPreconditionVerifier(
      int deviceSdk,
      Provider<ScanPreconditionsVerifierApi18> scanPreconditionVerifierForApi18,
      Provider<ScanPreconditionsVerifierApi24> scanPreconditionVerifierForApi24) {
    return Preconditions.checkNotNull(
        ClientComponent.ClientModule.provideScanPreconditionVerifier(
            deviceSdk, scanPreconditionVerifierForApi18, scanPreconditionVerifierForApi24),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
