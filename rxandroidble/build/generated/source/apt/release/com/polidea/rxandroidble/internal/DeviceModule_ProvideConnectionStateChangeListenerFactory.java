// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal;

import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import com.jakewharton.rxrelay.BehaviorRelay;
import com.polidea.rxandroidble.RxBleConnection;
import com.polidea.rxandroidble.internal.connection.ConnectionStateChangeListener;

public final class DeviceModule_ProvideConnectionStateChangeListenerFactory
    implements Factory<ConnectionStateChangeListener> {
  private final Provider<BehaviorRelay<RxBleConnection.RxBleConnectionState>>
      connectionStateBehaviorRelayProvider;

  public DeviceModule_ProvideConnectionStateChangeListenerFactory(
      Provider<BehaviorRelay<RxBleConnection.RxBleConnectionState>>
          connectionStateBehaviorRelayProvider) {
    this.connectionStateBehaviorRelayProvider = connectionStateBehaviorRelayProvider;
  }

  @Override
  public ConnectionStateChangeListener get() {
    return Preconditions.checkNotNull(
        DeviceModule.provideConnectionStateChangeListener(
            connectionStateBehaviorRelayProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DeviceModule_ProvideConnectionStateChangeListenerFactory create(
      Provider<BehaviorRelay<RxBleConnection.RxBleConnectionState>>
          connectionStateBehaviorRelayProvider) {
    return new DeviceModule_ProvideConnectionStateChangeListenerFactory(
        connectionStateBehaviorRelayProvider);
  }

  public static ConnectionStateChangeListener proxyProvideConnectionStateChangeListener(
      BehaviorRelay<RxBleConnection.RxBleConnectionState> connectionStateBehaviorRelay) {
    return Preconditions.checkNotNull(
        DeviceModule.provideConnectionStateChangeListener(connectionStateBehaviorRelay),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
