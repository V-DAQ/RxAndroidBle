// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble;

import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.util.LocationServicesOkObservableApi23;
import rx.Observable;

public final class ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory
    implements Factory<Observable<Boolean>> {
  private final ClientComponent.ClientModule module;

  private final Provider<Integer> deviceSdkProvider;

  private final Provider<LocationServicesOkObservableApi23>
      locationServicesOkObservableApi23Provider;

  public ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory(
      ClientComponent.ClientModule module,
      Provider<Integer> deviceSdkProvider,
      Provider<LocationServicesOkObservableApi23> locationServicesOkObservableApi23Provider) {
    this.module = module;
    this.deviceSdkProvider = deviceSdkProvider;
    this.locationServicesOkObservableApi23Provider = locationServicesOkObservableApi23Provider;
  }

  @Override
  public Observable<Boolean> get() {
    return Preconditions.checkNotNull(
        module.provideLocationServicesOkObservable(
            deviceSdkProvider.get(), locationServicesOkObservableApi23Provider),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory create(
      ClientComponent.ClientModule module,
      Provider<Integer> deviceSdkProvider,
      Provider<LocationServicesOkObservableApi23> locationServicesOkObservableApi23Provider) {
    return new ClientComponent_ClientModule_ProvideLocationServicesOkObservableFactory(
        module, deviceSdkProvider, locationServicesOkObservableApi23Provider);
  }

  public static Observable<Boolean> proxyProvideLocationServicesOkObservable(
      ClientComponent.ClientModule instance,
      int deviceSdk,
      Provider<LocationServicesOkObservableApi23> locationServicesOkObservableApi23Provider) {
    return Preconditions.checkNotNull(
        instance.provideLocationServicesOkObservable(
            deviceSdk, locationServicesOkObservableApi23Provider),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
