// Generated by Dagger (https://google.github.io/dagger).
package com.polidea.rxandroidble.internal;

import android.bluetooth.BluetoothDevice;
import bleshadow.dagger.internal.Factory;
import bleshadow.dagger.internal.Preconditions;
import bleshadow.javax.inject.Provider;
import com.polidea.rxandroidble.internal.util.RxBleAdapterWrapper;

public final class DeviceModule_ProvideBluetoothDeviceFactory implements Factory<BluetoothDevice> {
  private final DeviceModule module;

  private final Provider<RxBleAdapterWrapper> adapterWrapperProvider;

  public DeviceModule_ProvideBluetoothDeviceFactory(
      DeviceModule module, Provider<RxBleAdapterWrapper> adapterWrapperProvider) {
    this.module = module;
    this.adapterWrapperProvider = adapterWrapperProvider;
  }

  @Override
  public BluetoothDevice get() {
    return Preconditions.checkNotNull(
        module.provideBluetoothDevice(adapterWrapperProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DeviceModule_ProvideBluetoothDeviceFactory create(
      DeviceModule module, Provider<RxBleAdapterWrapper> adapterWrapperProvider) {
    return new DeviceModule_ProvideBluetoothDeviceFactory(module, adapterWrapperProvider);
  }

  public static BluetoothDevice proxyProvideBluetoothDevice(
      DeviceModule instance, RxBleAdapterWrapper adapterWrapper) {
    return Preconditions.checkNotNull(
        instance.provideBluetoothDevice(adapterWrapper),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
